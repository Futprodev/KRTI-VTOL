import time
from dronekit import connect, VehicleMode
from pymavlink import mavutil

# Konek Ke Pihwak
connection_string = '/dev/ttyACM0'  # Sesuaiin sama address nanti
vehicle = connect(connection_string, baud=57600, wait_ready=True)

# Arming drone
def arm_and_takeoff(target_altitude):
    print("Arming motors")
    vehicle.mode = VehicleMode("GUIDED")
    vehicle.armed = True

    while not vehicle.armed:
        print(" Waiting for arming...")
        time.sleep(1)

    print("Taking off!")
    vehicle.simple_takeoff(target_altitude)

    while True:
        current_altitude = vehicle.location.global_relative_frame.alt
        if current_altitude >= target_altitude * 0.95:
            print("Reached target altitude")
            break
        time.sleep(1)

# Adjust kecepatan motornya utk balancing
def adjust_motor_speed(roll, pitch):
    max_speed = 1000  # Maximum motor speed
    min_speed = 800   # Minimum motor speed

    # Konversi tilt dari dronenya ke motor speed
    roll_factor = 0.1   # Tilt angle to motor speed conversion factor for roll
    pitch_factor = 0.1  # Tilt angle to motor speed conversion factor for pitch

    roll_speed = min(max_speed, max(min_speed, int(roll * roll_factor)))
    pitch_speed = min(max_speed, max(min_speed, int(pitch * pitch_factor)))

    # Set kecepatan motor
    vehicle.channels.overrides[mavutil.mavlink.MAV_CMD_DO_SET_ROLL_PITCH_YAW_THRUST] = (0, 0, roll_speed, pitch_speed, 0)

# Terbang 5 meter
target_altitude = 5
arm_and_takeoff(target_altitude)

# Mulai timer jadi 10 detik di udara
start_time = time.time()

# Loop balancing
while True:
    # Read roll and pitch angles from vehicle
    roll = vehicle.attitude.roll
    pitch = vehicle.attitude.pitch

    # Adjust motor speeds based on tilt angle
    adjust_motor_speed(roll, pitch)

    # Check kalo udh 10 detik atau blum
    if time.time() - start_time >= 10:
        print("Landing...")
        vehicle.mode = VehicleMode("LAND")
        break

    time.sleep(0.1)  # Adjust the sleep duration based on your control loop frequency

# Tunggu disarming
while vehicle.armed:
    time.sleep(1)
# close drone
vehicle.close()
